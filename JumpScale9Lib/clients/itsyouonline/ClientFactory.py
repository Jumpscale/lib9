from .User import User
from .Organization import Organization
from .client import Client

DEFAULT_BASE_URL = "https://itsyou.online"


class ClientFactory:

    def __init__(self):
        self.__jslocation__ = 'j.clients.itsyouonline'

    def install_for_ubuntu(self):
        j.sal.process.execute("apt install  python3.5-dev")
        j.sal.process.execute("pip3 install python-jose")

    def get_user(self, application_id, secret, validity=None, refreshable=False, scope=None, base_url=DEFAULT_BASE_URL):
        """
        Get a client object for an ItsYou.online user.

        Args:
            application_id: application ID of the API access key of the ItsYou.online user
            secret: secret of the API access key of the ItsYou.online user
            validity: time in seconds after which the JWT will become invalid; defaults to None
            refreshable (True/False): If true the JWT can be refreshed; defaults to False
            scope: defaults to None
            base_url: base url of the ItsYou.online service; defaults to https://itsyou.online
        """
        jwt = Client.get_jwt(application_id, secret,
                             validity, refreshable, scope, base_url)
        return self.get_user_with_jwt(jwt, base_url)

    def get_organization(self, global_id, secret, validity=None, refreshable=False, scope=None, base_url=DEFAULT_BASE_URL):
        """
        Get a client object for an ItsYou.online organization.

        Args:
            global_id: global ID (client ID) of the API access key of the ItsYou.online organization
            secret: secret of the API access key of the ItsYou.online organization
            validity: time in seconds after which the JWT will become invalid; defaults to None
            refreshable (True/False): If true the JWT can be refreshed; defaults to False
            scope: defaults to None
            base_url: base url of the ItsYou.online service; defaults to https://itsyou.online
        """
        jwt = Client.get_jwt(global_id, secret, validity,
                             refreshable, scope, base_url)
        return self.get_organization_with_jwt(jwt, base_url)

    def get_jwt(self, client_id, secret, validity=None, refreshable=False, scope=None, base_url=DEFAULT_BASE_URL):
        """
        Get a JSON Web token for a given API access key.

        Args:
            client_id: application ID of the API access key of an ItsYou.online user, or global_id of the API access key of an ItsYou.online organization
            secret: secret of the API access key of the ItsYou.online user
            validity: time in seconds after which the JWT will become invalid; defaults to None
            refreshable (True/False): If true the JWT can be refreshed; defaults to False
            scope: defaults to None
            base_url: base url of the ItsYou.online service; defaults to https://itsyou.online
        """
        return Client.get_jwt(client_id, secret, validity, refreshable, scope, base_url)

    def get_user_with_jwt(self, jwt, base_url=DEFAULT_BASE_URL):
        """
        Get a client object for an ItsYou.online user.

        Args:
            jwt: JSON Web token created for an ItsYou.online user
            base_url: base url of the ItsYou.online service; defaults to https://itsyou.online
        """
        client = self.get_client_with_jwt(jwt, base_url)
        return User(client)

    def get_organization_with_jwt(self, jwt, base_url=DEFAULT_BASE_URL):
        """
        Get a client object for an ItsYou.online organization.

        Args:
            jwt: JSON Web token created for an ItsYou.online organization
            base_url: base url of the ItsYou.online service; defaults to https://itsyou.online
        """
        client = self.get_client_with_jwt(jwt, base_url)
        return Organization(client)

    def get_client(self, client_id, secret, validity=None, refreshable=False, scope=None, base_url=DEFAULT_BASE_URL):
        """"
        Get to the autogenerated client for the ItsYou.online RESTful API

        Args:
            client_id: application ID of the API access key of an ItsYou.online user, or global_id of the API access key of an ItsYou.online organization
            secret: secret of the API access key of the ItsYou.online user
            validity: time in seconds after which the JWT will become invalid; defaults to None
            refreshable (True/False): If true the JWT can be refreshed; defaults to False
            scope: defaults to None
            base_url: base url of the ItsYou.online service; defaults to https://itsyou.online
        """
        jwt = Client.get_jwt(client_id, secret, validity,
                             refreshable, scope, base_url)
        return Client(jwt, base_url)

    def get_client_with_jwt(self, jwt, base_url=DEFAULT_BASE_URL):
        """"
        Get to the autogenerated client for the ItsYou.online RESTful API

        Args:
            jwt: JSON Web token created for an ItsYou.online user or organization
            base_url: base url of the ItsYou.online service; defaults to https://itsyou.online
        """
        return Client(jwt, base_url)
