{"info": {"version": "7.0", "title": "JumpScale actors", "description": ""}, "definitions": {"object": {"type": "object", "additionalProperties": {"type": "string"}}, "strarray": {"items": {"type": "string"}, "type": "array"}}, "paths": {"/cloudapi/machines/detachDisk": {"post": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Detach a disk from the machine\n", "description": "Detach a disk from the machine\n", "tags": ["cloudapi__machines"], "parameters": [{"required": true, "type": "integer", "description": " id of the machine", "name": "machineId", "in": "formData"}, {"required": true, "type": "integer", "description": "id of disk to detach", "name": "diskId", "in": "formData"}], "operationId": "post__cloudapi_machines_detachDisk"}, "get": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Detach a disk from the machine\n", "description": "Detach a disk from the machine\n", "tags": ["cloudapi__machines"], "parameters": [{"required": true, "type": "integer", "description": " id of the machine", "name": "machineId", "in": "query"}, {"required": true, "type": "integer", "description": "id of disk to detach", "name": "diskId", "in": "query"}], "operationId": "get__cloudapi_machines_detachDisk"}}, "/cloudapi/users/isValidInviteUserToken": {"post": {"responses": {"200": {"schema": {"type": "boolean"}, "description": "result"}}, "summary": "Check if the inviteusertoken and emailaddress pair are valid and matching\n", "description": "Check if the inviteusertoken and emailaddress pair are valid and matching\n", "tags": ["cloudapi__users"], "parameters": [{"required": true, "type": "string", "description": "the token that was previously sent to the invited user email", "name": "inviteusertoken", "in": "formData"}, {"required": true, "type": "string", "description": "email address for the user", "name": "emailaddress", "in": "formData"}], "operationId": "post__cloudapi_users_isValidInviteUserToken"}, "get": {"responses": {"200": {"schema": {"type": "boolean"}, "description": "result"}}, "summary": "Check if the inviteusertoken and emailaddress pair are valid and matching\n", "description": "Check if the inviteusertoken and emailaddress pair are valid and matching\n", "tags": ["cloudapi__users"], "parameters": [{"required": true, "type": "string", "description": "the token that was previously sent to the invited user email", "name": "inviteusertoken", "in": "query"}, {"required": true, "type": "string", "description": "email address for the user", "name": "emailaddress", "in": "query"}], "operationId": "get__cloudapi_users_isValidInviteUserToken"}}, "/cloudapi/machines/updateUser": {"post": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Update user access rights. Returns True only if an actual update has happened.\n", "description": "Update user access rights. Returns True only if an actual update has happened.\n", "tags": ["cloudapi__machines"], "parameters": [{"required": true, "type": "integer", "description": " id of the machineId", "name": "machineId", "in": "formData"}, {"required": true, "type": "string", "description": " userid/email for registered users or emailaddress for unregistered users", "name": "userId", "in": "formData"}, {"required": true, "type": "string", "description": " 'R' for read only access, 'RCX' for Write and 'ARCXDU' for Admin", "name": "accesstype", "in": "formData"}], "operationId": "post__cloudapi_machines_updateUser"}, "get": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Update user access rights. Returns True only if an actual update has happened.\n", "description": "Update user access rights. Returns True only if an actual update has happened.\n", "tags": ["cloudapi__machines"], "parameters": [{"required": true, "type": "integer", "description": " id of the machineId", "name": "machineId", "in": "query"}, {"required": true, "type": "string", "description": " userid/email for registered users or emailaddress for unregistered users", "name": "userId", "in": "query"}, {"required": true, "type": "string", "description": " 'R' for read only access, 'RCX' for Write and 'ARCXDU' for Admin", "name": "accesstype", "in": "query"}], "operationId": "get__cloudapi_machines_updateUser"}}, "/cloudapi/cloudspaces/list": {"post": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "List all cloudspaces the user has access to\n", "description": "List all cloudspaces the user has access to\n", "operationId": "post__cloudapi_cloudspaces_list", "tags": ["cloudapi__cloudspaces"]}, "get": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "List all cloudspaces the user has access to\n", "description": "List all cloudspaces the user has access to\n", "operationId": "get__cloudapi_cloudspaces_list", "tags": ["cloudapi__cloudspaces"]}}, "/cloudapi/accounts/getCreditBalance": {"post": {"responses": {"200": {"schema": {"$ref": "#/definitions/object"}, "description": "result"}}, "summary": "Get the current available credit balance\n", "description": "Get the current available credit balance\n", "tags": ["cloudapi__accounts"], "parameters": [{"required": true, "type": "integer", "description": " id of the account", "name": "accountId", "in": "formData"}], "operationId": "post__cloudapi_accounts_getCreditBalance"}, "get": {"responses": {"200": {"schema": {"$ref": "#/definitions/object"}, "description": "result"}}, "summary": "Get the current available credit balance\n", "description": "Get the current available credit balance\n", "tags": ["cloudapi__accounts"], "parameters": [{"required": true, "type": "integer", "description": " id of the account", "name": "accountId", "in": "query"}], "operationId": "get__cloudapi_accounts_getCreditBalance"}}, "/cloudapi/machines/addUser": {"post": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Give a registered user access rights\n", "description": "Give a registered user access rights\n", "tags": ["cloudapi__machines"], "parameters": [{"required": true, "type": "integer", "description": "  id of the machine", "name": "machineId", "in": "formData"}, {"required": true, "type": "string", "description": " username or emailaddress of the user to grant access", "name": "userId", "in": "formData"}, {"required": true, "type": "string", "description": " 'R' for read only access, 'RCX' for Write and 'ARCXDU' for Admin", "name": "accesstype", "in": "formData"}], "operationId": "post__cloudapi_machines_addUser"}, "get": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Give a registered user access rights\n", "description": "Give a registered user access rights\n", "tags": ["cloudapi__machines"], "parameters": [{"required": true, "type": "integer", "description": "  id of the machine", "name": "machineId", "in": "query"}, {"required": true, "type": "string", "description": " username or emailaddress of the user to grant access", "name": "userId", "in": "query"}, {"required": true, "type": "string", "description": " 'R' for read only access, 'RCX' for Write and 'ARCXDU' for Admin", "name": "accesstype", "in": "query"}], "operationId": "get__cloudapi_machines_addUser"}}, "/cloudapi/sizes/list": {"post": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "List the available flavors, filtering can be based on the user which is doing the request\n", "description": "List the available flavors, filtering can be based on the user which is doing the request\n", "tags": ["cloudapi__sizes"], "parameters": [{"required": true, "type": "integer", "description": " id of the cloudspace", "name": "cloudspaceId", "in": "formData"}], "operationId": "post__cloudapi_sizes_list"}, "get": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "List the available flavors, filtering can be based on the user which is doing the request\n", "description": "List the available flavors, filtering can be based on the user which is doing the request\n", "tags": ["cloudapi__sizes"], "parameters": [{"required": true, "type": "integer", "description": " id of the cloudspace", "name": "cloudspaceId", "in": "query"}], "operationId": "get__cloudapi_sizes_list"}}, "/cloudapi/machines/create": {"post": {"responses": {"200": {"schema": {"type": "boolean"}, "description": "result"}}, "summary": "Create a machine based on the available sizes, in a certain cloud space\nThe user needs write access rights on the cloud space\n", "description": "Create a machine based on the available sizes, in a certain cloud space\nThe user needs write access rights on the cloud space\n", "tags": ["cloudapi__machines"], "parameters": [{"required": true, "type": "integer", "description": "id of cloud space in which we want to create a machine", "name": "cloudspaceId", "in": "formData"}, {"required": true, "type": "string", "description": "name of machine", "name": "name", "in": "formData"}, {"required": false, "type": "string", "description": "optional description ", "name": "description", "in": "formData"}, {"required": true, "type": "integer", "description": "id of the specific size", "name": "sizeId", "in": "formData"}, {"required": true, "type": "integer", "description": " id of the specific image", "name": "imageId", "in": "formData"}, {"required": true, "type": "integer", "description": " size of base volume", "name": "disksize", "in": "formData"}, {"required": false, "type": "array", "description": " list of extra data disks  ", "name": "datadisks", "in": "formData"}], "operationId": "post__cloudapi_machines_create"}, "get": {"responses": {"200": {"schema": {"type": "boolean"}, "description": "result"}}, "summary": "Create a machine based on the available sizes, in a certain cloud space\nThe user needs write access rights on the cloud space\n", "description": "Create a machine based on the available sizes, in a certain cloud space\nThe user needs write access rights on the cloud space\n", "tags": ["cloudapi__machines"], "parameters": [{"required": true, "type": "integer", "description": "id of cloud space in which we want to create a machine", "name": "cloudspaceId", "in": "query"}, {"required": true, "type": "string", "description": "name of machine", "name": "name", "in": "query"}, {"required": false, "type": "string", "description": "optional description ", "name": "description", "in": "query"}, {"required": true, "type": "integer", "description": "id of the specific size", "name": "sizeId", "in": "query"}, {"required": true, "type": "integer", "description": " id of the specific image", "name": "imageId", "in": "query"}, {"required": true, "type": "integer", "description": " size of base volume", "name": "disksize", "in": "query"}, {"required": false, "type": "array", "description": " list of extra data disks  ", "name": "datadisks", "in": "query"}], "operationId": "get__cloudapi_machines_create"}}, "/cloudapi/portforwarding/delete": {"post": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Delete a specific port forwarding rule\n", "description": "Delete a specific port forwarding rule\n", "tags": ["cloudapi__portforwarding"], "parameters": [{"required": true, "type": "integer", "description": " id of the cloudspace", "name": "cloudspaceId", "in": "formData"}, {"required": true, "type": "integer", "description": " id of the port forward rule", "name": "id", "in": "formData"}], "operationId": "post__cloudapi_portforwarding_delete"}, "get": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Delete a specific port forwarding rule\n", "description": "Delete a specific port forwarding rule\n", "tags": ["cloudapi__portforwarding"], "parameters": [{"required": true, "type": "integer", "description": " id of the cloudspace", "name": "cloudspaceId", "in": "query"}, {"required": true, "type": "integer", "description": " id of the port forward rule", "name": "id", "in": "query"}], "operationId": "get__cloudapi_portforwarding_delete"}}, "/cloudapi/accounts/delete": {"post": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Delete an account (Method not implemented)\n", "description": "Delete an account (Method not implemented)\n", "tags": ["cloudapi__accounts"], "parameters": [{"required": true, "type": "integer", "description": " id of the account", "name": "accountId", "in": "formData"}], "operationId": "post__cloudapi_accounts_delete"}, "get": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Delete an account (Method not implemented)\n", "description": "Delete an account (Method not implemented)\n", "tags": ["cloudapi__accounts"], "parameters": [{"required": true, "type": "integer", "description": " id of the account", "name": "accountId", "in": "query"}], "operationId": "get__cloudapi_accounts_delete"}}, "/cloudapi/portforwarding/update": {"post": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Update a port forwarding rule\n", "description": "Update a port forwarding rule\n", "tags": ["cloudapi__portforwarding"], "parameters": [{"required": true, "type": "integer", "description": "id of the cloudspace", "name": "cloudspaceId", "in": "formData"}, {"required": true, "type": "integer", "description": " id of the portforward to edit", "name": "id", "in": "formData"}, {"required": true, "type": "string", "description": " public ipaddress", "name": "publicIp", "in": "formData"}, {"required": true, "type": "integer", "description": " public port", "name": "publicPort", "in": "formData"}, {"required": true, "type": "integer", "description": " id of the virtual machine", "name": "machineId", "in": "formData"}, {"required": true, "type": "integer", "description": " local port", "name": "localPort", "in": "formData"}, {"required": true, "type": "string", "description": " protocol udp or tcp", "name": "protocol", "in": "formData"}], "operationId": "post__cloudapi_portforwarding_update"}, "get": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Update a port forwarding rule\n", "description": "Update a port forwarding rule\n", "tags": ["cloudapi__portforwarding"], "parameters": [{"required": true, "type": "integer", "description": "id of the cloudspace", "name": "cloudspaceId", "in": "query"}, {"required": true, "type": "integer", "description": " id of the portforward to edit", "name": "id", "in": "query"}, {"required": true, "type": "string", "description": " public ipaddress", "name": "publicIp", "in": "query"}, {"required": true, "type": "integer", "description": " public port", "name": "publicPort", "in": "query"}, {"required": true, "type": "integer", "description": " id of the virtual machine", "name": "machineId", "in": "query"}, {"required": true, "type": "integer", "description": " local port", "name": "localPort", "in": "query"}, {"required": true, "type": "string", "description": " protocol udp or tcp", "name": "protocol", "in": "query"}], "operationId": "get__cloudapi_portforwarding_update"}}, "/cloudapi/machines/clone": {"post": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Clone the machine\n", "description": "Clone the machine\n", "tags": ["cloudapi__machines"], "parameters": [{"required": true, "type": "string", "description": "id of the machine to clone", "name": "machineId", "in": "formData"}, {"required": true, "type": "string", "description": " name of the cloned machine", "name": "name", "in": "formData"}], "operationId": "post__cloudapi_machines_clone"}, "get": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Clone the machine\n", "description": "Clone the machine\n", "tags": ["cloudapi__machines"], "parameters": [{"required": true, "type": "string", "description": "id of the machine to clone", "name": "machineId", "in": "query"}, {"required": true, "type": "string", "description": " name of the cloned machine", "name": "name", "in": "query"}], "operationId": "get__cloudapi_machines_clone"}}, "/cloudapi/accounts/create": {"post": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Create a extra an account (Method not implemented)\n", "description": "Create a extra an account (Method not implemented)\n", "tags": ["cloudapi__accounts"], "parameters": [{"required": true, "type": "string", "description": "name of account to create", "name": "name", "in": "formData"}, {"required": true, "type": "array", "description": "list of ids of users which have full access to this account", "name": "access", "in": "formData"}], "operationId": "post__cloudapi_accounts_create"}, "get": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Create a extra an account (Method not implemented)\n", "description": "Create a extra an account (Method not implemented)\n", "tags": ["cloudapi__accounts"], "parameters": [{"required": true, "type": "string", "description": "name of account to create", "name": "name", "in": "query"}, {"required": true, "type": "array", "description": "list of ids of users which have full access to this account", "name": "access", "in": "query"}], "operationId": "get__cloudapi_accounts_create"}}, "/cloudapi/accounts/getCreditHistory": {"post": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Get all the credit transactions (positive and negative) for this account\n", "description": "Get all the credit transactions (positive and negative) for this account\n", "tags": ["cloudapi__accounts"], "parameters": [{"required": true, "type": "integer", "description": " id of the account", "name": "accountId", "in": "formData"}], "operationId": "post__cloudapi_accounts_getCreditHistory"}, "get": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Get all the credit transactions (positive and negative) for this account\n", "description": "Get all the credit transactions (positive and negative) for this account\n", "tags": ["cloudapi__accounts"], "parameters": [{"required": true, "type": "integer", "description": " id of the account", "name": "accountId", "in": "query"}], "operationId": "get__cloudapi_accounts_getCreditHistory"}}, "/cloudapi/cloudspaces/create": {"post": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Create an extra cloudspace\n", "description": "Create an extra cloudspace\n", "tags": ["cloudapi__cloudspaces"], "parameters": [{"required": true, "type": "integer", "description": "id of acount this cloudspace belongs to", "name": "accountId", "in": "formData"}, {"required": true, "type": "string", "description": " name of cloudspace to create", "name": "location", "in": "formData"}, {"required": true, "type": "string", "description": "name of space to create", "name": "name", "in": "formData"}, {"required": true, "type": "string", "description": "username of a user which has full access to this space", "name": "access", "in": "formData"}, {"required": false, "type": "integer", "description": "max size of memory in space (in MB) ", "name": "maxMemoryCapacity", "in": "formData"}, {"required": false, "type": "integer", "description": "max size of aggregated disks (in GB) ", "name": "maxDiskCapacity", "in": "formData"}], "operationId": "post__cloudapi_cloudspaces_create"}, "get": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Create an extra cloudspace\n", "description": "Create an extra cloudspace\n", "tags": ["cloudapi__cloudspaces"], "parameters": [{"required": true, "type": "integer", "description": "id of acount this cloudspace belongs to", "name": "accountId", "in": "query"}, {"required": true, "type": "string", "description": " name of cloudspace to create", "name": "location", "in": "query"}, {"required": true, "type": "string", "description": "name of space to create", "name": "name", "in": "query"}, {"required": true, "type": "string", "description": "username of a user which has full access to this space", "name": "access", "in": "query"}, {"required": false, "type": "integer", "description": "max size of memory in space (in MB) ", "name": "maxMemoryCapacity", "in": "query"}, {"required": false, "type": "integer", "description": "max size of aggregated disks (in GB) ", "name": "maxDiskCapacity", "in": "query"}], "operationId": "get__cloudapi_cloudspaces_create"}}, "/cloudapi/disks/delete": {"post": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Delete a disk\n", "description": "Delete a disk\n", "tags": ["cloudapi__disks"], "parameters": [{"required": true, "type": "integer", "description": " id of disk to delete", "name": "diskId", "in": "formData"}, {"required": false, "type": "boolean", "description": "detach disk from machine first ", "name": "detach", "in": "formData"}], "operationId": "post__cloudapi_disks_delete"}, "get": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Delete a disk\n", "description": "Delete a disk\n", "tags": ["cloudapi__disks"], "parameters": [{"required": true, "type": "integer", "description": " id of disk to delete", "name": "diskId", "in": "query"}, {"required": false, "type": "boolean", "description": "detach disk from machine first ", "name": "detach", "in": "query"}], "operationId": "get__cloudapi_disks_delete"}}, "/cloudapi/machines/pause": {"post": {"responses": {"200": {"schema": {"type": "boolean"}, "description": "result"}}, "summary": "Pause the machine\n", "description": "Pause the machine\n", "tags": ["cloudapi__machines"], "parameters": [{"required": true, "type": "integer", "description": " id of the machine", "name": "machineId", "in": "formData"}], "operationId": "post__cloudapi_machines_pause"}, "get": {"responses": {"200": {"schema": {"type": "boolean"}, "description": "result"}}, "summary": "Pause the machine\n", "description": "Pause the machine\n", "tags": ["cloudapi__machines"], "parameters": [{"required": true, "type": "integer", "description": " id of the machine", "name": "machineId", "in": "query"}], "operationId": "get__cloudapi_machines_pause"}}, "/cloudapi/accounts/update": {"post": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Update an account name (Method not implemented)\n", "description": "Update an account name (Method not implemented)\n", "tags": ["cloudapi__accounts"], "parameters": [{"required": true, "type": "integer", "description": " id of the account to change", "name": "accountId", "in": "formData"}, {"required": true, "type": "string", "description": " name of the account", "name": "name", "in": "formData"}], "operationId": "post__cloudapi_accounts_update"}, "get": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Update an account name (Method not implemented)\n", "description": "Update an account name (Method not implemented)\n", "tags": ["cloudapi__accounts"], "parameters": [{"required": true, "type": "integer", "description": " id of the account to change", "name": "accountId", "in": "query"}, {"required": true, "type": "string", "description": " name of the account", "name": "name", "in": "query"}], "operationId": "get__cloudapi_accounts_update"}}, "/cloudapi/paypal/confirmvalidation": {"post": {"responses": {"200": {"schema": {"$ref": "#/definitions/object"}, "description": "result"}}, "summary": "Paypal callback url for the 1$ authorization\n", "description": "Paypal callback url for the 1$ authorization\n", "tags": ["cloudapi__paypal"], "parameters": [{"required": true, "type": "integer", "description": " internal payment id", "name": "id", "in": "formData"}, {"required": true, "type": "string", "description": "token", "name": "token", "in": "formData"}, {"required": true, "type": "string", "description": "PayerID", "name": "PayerID", "in": "formData"}], "operationId": "post__cloudapi_paypal_confirmvalidation"}, "get": {"responses": {"200": {"schema": {"$ref": "#/definitions/object"}, "description": "result"}}, "summary": "Paypal callback url for the 1$ authorization\n", "description": "Paypal callback url for the 1$ authorization\n", "tags": ["cloudapi__paypal"], "parameters": [{"required": true, "type": "integer", "description": " internal payment id", "name": "id", "in": "query"}, {"required": true, "type": "string", "description": "token", "name": "token", "in": "query"}, {"required": true, "type": "string", "description": "PayerID", "name": "PayerID", "in": "query"}], "operationId": "get__cloudapi_paypal_confirmvalidation"}}, "/cloudapi/users/resetPassword": {"post": {"responses": {"200": {"schema": {"type": "boolean"}, "description": "result"}}, "summary": "Resets a password\n", "description": "Resets a password\n", "tags": ["cloudapi__users"], "parameters": [{"required": true, "type": "string", "description": " password reset token", "name": "resettoken", "in": "formData"}, {"required": true, "type": "string", "description": " new password", "name": "newpassword", "in": "formData"}], "operationId": "post__cloudapi_users_resetPassword"}, "get": {"responses": {"200": {"schema": {"type": "boolean"}, "description": "result"}}, "summary": "Resets a password\n", "description": "Resets a password\n", "tags": ["cloudapi__users"], "parameters": [{"required": true, "type": "string", "description": " password reset token", "name": "resettoken", "in": "query"}, {"required": true, "type": "string", "description": " new password", "name": "newpassword", "in": "query"}], "operationId": "get__cloudapi_users_resetPassword"}}, "/cloudapi/disks/list": {"post": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "List the created disks belonging to an account\n", "description": "List the created disks belonging to an account\n", "tags": ["cloudapi__disks"], "parameters": [{"required": true, "type": "integer", "description": "id of accountId the disks belongs to", "name": "accountId", "in": "formData"}, {"required": false, "type": "string", "description": "type of the disks ", "name": "type", "in": "formData"}], "operationId": "post__cloudapi_disks_list"}, "get": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "List the created disks belonging to an account\n", "description": "List the created disks belonging to an account\n", "tags": ["cloudapi__disks"], "parameters": [{"required": true, "type": "integer", "description": "id of accountId the disks belongs to", "name": "accountId", "in": "query"}, {"required": false, "type": "string", "description": "type of the disks ", "name": "type", "in": "query"}], "operationId": "get__cloudapi_disks_list"}}, "/cloudapi/images/delete": {"post": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Delete an image\n", "description": "Delete an image\n", "tags": ["cloudapi__images"], "parameters": [{"required": true, "type": "integer", "description": " id of the image to delete", "name": "imageId", "in": "formData"}], "operationId": "post__cloudapi_images_delete"}, "get": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Delete an image\n", "description": "Delete an image\n", "tags": ["cloudapi__images"], "parameters": [{"required": true, "type": "integer", "description": " id of the image to delete", "name": "imageId", "in": "query"}], "operationId": "get__cloudapi_images_delete"}}, "/cloudapi/cloudspaces/get": {"post": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Get cloudspace details\n", "description": "Get cloudspace details\n", "tags": ["cloudapi__cloudspaces"], "parameters": [{"required": true, "type": "integer", "description": " id of the cloudspace", "name": "cloudspaceId", "in": "formData"}], "operationId": "post__cloudapi_cloudspaces_get"}, "get": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Get cloudspace details\n", "description": "Get cloudspace details\n", "tags": ["cloudapi__cloudspaces"], "parameters": [{"required": true, "type": "integer", "description": " id of the cloudspace", "name": "cloudspaceId", "in": "query"}], "operationId": "get__cloudapi_cloudspaces_get"}}, "/cloudapi/portforwarding/create": {"post": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Create a port forwarding rule\n", "description": "Create a port forwarding rule\n", "tags": ["cloudapi__portforwarding"], "parameters": [{"required": true, "type": "integer", "description": "id of the cloudspace", "name": "cloudspaceId", "in": "formData"}, {"required": true, "type": "string", "description": " public ipaddress", "name": "publicIp", "in": "formData"}, {"required": true, "type": "integer", "description": " public port", "name": "publicPort", "in": "formData"}, {"required": true, "type": "integer", "description": " id of the virtual machine", "name": "machineId", "in": "formData"}, {"required": true, "type": "integer", "description": " local port", "name": "localPort", "in": "formData"}, {"required": true, "type": "string", "description": " protocol udp or tcp", "name": "protocol", "in": "formData"}], "operationId": "post__cloudapi_portforwarding_create"}, "get": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Create a port forwarding rule\n", "description": "Create a port forwarding rule\n", "tags": ["cloudapi__portforwarding"], "parameters": [{"required": true, "type": "integer", "description": "id of the cloudspace", "name": "cloudspaceId", "in": "query"}, {"required": true, "type": "string", "description": " public ipaddress", "name": "publicIp", "in": "query"}, {"required": true, "type": "integer", "description": " public port", "name": "publicPort", "in": "query"}, {"required": true, "type": "integer", "description": " id of the virtual machine", "name": "machineId", "in": "query"}, {"required": true, "type": "integer", "description": " local port", "name": "localPort", "in": "query"}, {"required": true, "type": "string", "description": " protocol udp or tcp", "name": "protocol", "in": "query"}], "operationId": "get__cloudapi_portforwarding_create"}}, "/cloudapi/machines/createTemplate": {"post": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Create a template from the active machine\n", "description": "Create a template from the active machine\n", "tags": ["cloudapi__machines"], "parameters": [{"required": true, "type": "integer", "description": " id of the machine", "name": "machineId", "in": "formData"}, {"required": true, "type": "string", "description": " name of the template", "name": "templatename", "in": "formData"}, {"required": false, "type": "string", "description": " snapshot id on which the template is based ", "name": "basename", "in": "formData"}], "operationId": "post__cloudapi_machines_createTemplate"}, "get": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Create a template from the active machine\n", "description": "Create a template from the active machine\n", "tags": ["cloudapi__machines"], "parameters": [{"required": true, "type": "integer", "description": " id of the machine", "name": "machineId", "in": "query"}, {"required": true, "type": "string", "description": " name of the template", "name": "templatename", "in": "query"}, {"required": false, "type": "string", "description": " snapshot id on which the template is based ", "name": "basename", "in": "query"}], "operationId": "get__cloudapi_machines_createTemplate"}}, "/cloudapi/machines/get": {"post": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Get information from a certain object.\nThis contains all information about the machine.\n", "description": "Get information from a certain object.\nThis contains all information about the machine.\n", "tags": ["cloudapi__machines"], "parameters": [{"required": true, "type": "integer", "description": " id of machine", "name": "machineId", "in": "formData"}], "operationId": "post__cloudapi_machines_get"}, "get": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Get information from a certain object.\nThis contains all information about the machine.\n", "description": "Get information from a certain object.\nThis contains all information about the machine.\n", "tags": ["cloudapi__machines"], "parameters": [{"required": true, "type": "integer", "description": " id of machine", "name": "machineId", "in": "query"}], "operationId": "get__cloudapi_machines_get"}}, "/cloudapi/accounts/listTemplates": {"post": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "List templates which can be managed by this account\n", "description": "List templates which can be managed by this account\n", "tags": ["cloudapi__accounts"], "parameters": [{"required": true, "type": "integer", "description": " id of the account", "name": "accountId", "in": "formData"}], "operationId": "post__cloudapi_accounts_listTemplates"}, "get": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "List templates which can be managed by this account\n", "description": "List templates which can be managed by this account\n", "tags": ["cloudapi__accounts"], "parameters": [{"required": true, "type": "integer", "description": " id of the account", "name": "accountId", "in": "query"}], "operationId": "get__cloudapi_accounts_listTemplates"}}, "/cloudapi/machines/resume": {"post": {"responses": {"200": {"schema": {"type": "boolean"}, "description": "result"}}, "summary": "Resume the machine\n", "description": "Resume the machine\n", "tags": ["cloudapi__machines"], "parameters": [{"required": true, "type": "integer", "description": " id of the machine", "name": "machineId", "in": "formData"}], "operationId": "post__cloudapi_machines_resume"}, "get": {"responses": {"200": {"schema": {"type": "boolean"}, "description": "result"}}, "summary": "Resume the machine\n", "description": "Resume the machine\n", "tags": ["cloudapi__machines"], "parameters": [{"required": true, "type": "integer", "description": " id of the machine", "name": "machineId", "in": "query"}], "operationId": "get__cloudapi_machines_resume"}}, "/cloudapi/machines/update": {"post": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Change basic properties of a machine\nName, description can be changed with this action.\n", "description": "Change basic properties of a machine\nName, description can be changed with this action.\n", "tags": ["cloudapi__machines"], "parameters": [{"required": true, "type": "integer", "description": " id of the machine", "name": "machineId", "in": "formData"}, {"required": false, "type": "string", "description": " name of the machine ", "name": "name", "in": "formData"}, {"required": false, "type": "string", "description": " description of the machine ", "name": "description", "in": "formData"}, {"required": false, "type": "integer", "description": "size of the machine in CU ", "name": "size", "in": "formData"}], "operationId": "post__cloudapi_machines_update"}, "get": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Change basic properties of a machine\nName, description can be changed with this action.\n", "description": "Change basic properties of a machine\nName, description can be changed with this action.\n", "tags": ["cloudapi__machines"], "parameters": [{"required": true, "type": "integer", "description": " id of the machine", "name": "machineId", "in": "query"}, {"required": false, "type": "string", "description": " name of the machine ", "name": "name", "in": "query"}, {"required": false, "type": "string", "description": " description of the machine ", "name": "description", "in": "query"}, {"required": false, "type": "integer", "description": "size of the machine in CU ", "name": "size", "in": "query"}], "operationId": "get__cloudapi_machines_update"}}, "/cloudapi/users/registerInvitedUser": {"post": {"responses": {"200": {"schema": {"type": "boolean"}, "description": "result"}}, "summary": "Registers an invited user\n", "description": "Registers an invited user\n", "tags": ["cloudapi__users"], "parameters": [{"required": true, "type": "string", "description": " user invitation token", "name": "inviteusertoken", "in": "formData"}, {"required": true, "type": "string", "description": " email address", "name": "emailaddress", "in": "formData"}, {"required": true, "type": "string", "description": " username to be assigned to user", "name": "username", "in": "formData"}, {"required": true, "type": "string", "description": " password", "name": "password", "in": "formData"}, {"required": true, "type": "string", "description": " password confirmation", "name": "confirmpassword", "in": "formData"}], "operationId": "post__cloudapi_users_registerInvitedUser"}, "get": {"responses": {"200": {"schema": {"type": "boolean"}, "description": "result"}}, "summary": "Registers an invited user\n", "description": "Registers an invited user\n", "tags": ["cloudapi__users"], "parameters": [{"required": true, "type": "string", "description": " user invitation token", "name": "inviteusertoken", "in": "query"}, {"required": true, "type": "string", "description": " email address", "name": "emailaddress", "in": "query"}, {"required": true, "type": "string", "description": " username to be assigned to user", "name": "username", "in": "query"}, {"required": true, "type": "string", "description": " password", "name": "password", "in": "query"}, {"required": true, "type": "string", "description": " password confirmation", "name": "confirmpassword", "in": "query"}], "operationId": "get__cloudapi_users_registerInvitedUser"}}, "/cloudapi/paypal/confirmpayedvalidation": {"post": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Paypal callback url for the 1$ payment, this is in case of a payed validation\nvar:id int,, internal payment id\nvar:token str,,token\nvar:PayerID str,,PayerID\nresult dict #An HTTP 302 Found response code is given with the url of the confirmation or cancelled page.\n", "description": "Paypal callback url for the 1$ payment, this is in case of a payed validation\nvar:id int,, internal payment id\nvar:token str,,token\nvar:PayerID str,,PayerID\nresult dict #An HTTP 302 Found response code is given with the url of the confirmation or cancelled page.\n", "operationId": "post__cloudapi_paypal_confirmpayedvalidation", "tags": ["cloudapi__paypal"]}, "get": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Paypal callback url for the 1$ payment, this is in case of a payed validation\nvar:id int,, internal payment id\nvar:token str,,token\nvar:PayerID str,,PayerID\nresult dict #An HTTP 302 Found response code is given with the url of the confirmation or cancelled page.\n", "description": "Paypal callback url for the 1$ payment, this is in case of a payed validation\nvar:id int,, internal payment id\nvar:token str,,token\nvar:PayerID str,,PayerID\nresult dict #An HTTP 302 Found response code is given with the url of the confirmation or cancelled page.\n", "operationId": "get__cloudapi_paypal_confirmpayedvalidation", "tags": ["cloudapi__paypal"]}}, "/cloudapi/paypal/confirmauthorization": {"post": {"responses": {"200": {"schema": {"$ref": "#/definitions/object"}, "description": "result"}}, "summary": "Paypal callback url\n", "description": "Paypal callback url\n", "tags": ["cloudapi__paypal"], "parameters": [{"required": true, "type": "integer", "description": " internal payment id", "name": "id", "in": "formData"}, {"required": true, "type": "string", "description": "token", "name": "token", "in": "formData"}, {"required": true, "type": "string", "description": "PayerID", "name": "PayerID", "in": "formData"}], "operationId": "post__cloudapi_paypal_confirmauthorization"}, "get": {"responses": {"200": {"schema": {"$ref": "#/definitions/object"}, "description": "result"}}, "summary": "Paypal callback url\n", "description": "Paypal callback url\n", "tags": ["cloudapi__paypal"], "parameters": [{"required": true, "type": "integer", "description": " internal payment id", "name": "id", "in": "query"}, {"required": true, "type": "string", "description": "token", "name": "token", "in": "query"}, {"required": true, "type": "string", "description": "PayerID", "name": "PayerID", "in": "query"}], "operationId": "get__cloudapi_paypal_confirmauthorization"}}, "/cloudapi/accounts/list": {"post": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "List all accounts the user has access to\n", "description": "List all accounts the user has access to\n", "operationId": "post__cloudapi_accounts_list", "tags": ["cloudapi__accounts"]}, "get": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "List all accounts the user has access to\n", "description": "List all accounts the user has access to\n", "operationId": "get__cloudapi_accounts_list", "tags": ["cloudapi__accounts"]}}, "/cloudapi/accounts/addUser": {"post": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Give a registered user access rights\n", "description": "Give a registered user access rights\n", "tags": ["cloudapi__accounts"], "parameters": [{"required": true, "type": "integer", "description": " id of the account", "name": "accountId", "in": "formData"}, {"required": true, "type": "string", "description": " username or emailaddress of the user to grant access", "name": "userId", "in": "formData"}, {"required": true, "type": "string", "description": " 'R' for read only access, 'RCX' for Write and 'ARCXDU' for Admin", "name": "accesstype", "in": "formData"}], "operationId": "post__cloudapi_accounts_addUser"}, "get": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Give a registered user access rights\n", "description": "Give a registered user access rights\n", "tags": ["cloudapi__accounts"], "parameters": [{"required": true, "type": "integer", "description": " id of the account", "name": "accountId", "in": "query"}, {"required": true, "type": "string", "description": " username or emailaddress of the user to grant access", "name": "userId", "in": "query"}, {"required": true, "type": "string", "description": " 'R' for read only access, 'RCX' for Write and 'ARCXDU' for Admin", "name": "accesstype", "in": "query"}], "operationId": "get__cloudapi_accounts_addUser"}}, "/cloudapi/users/updatePassword": {"post": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Change user password\n", "description": "Change user password\n", "tags": ["cloudapi__users"], "parameters": [{"required": true, "type": "string", "description": "oldPassword of the user", "name": "oldPassword", "in": "formData"}, {"required": true, "type": "string", "description": "newPassword of the user", "name": "newPassword", "in": "formData"}], "operationId": "post__cloudapi_users_updatePassword"}, "get": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Change user password\n", "description": "Change user password\n", "tags": ["cloudapi__users"], "parameters": [{"required": true, "type": "string", "description": "oldPassword of the user", "name": "oldPassword", "in": "query"}, {"required": true, "type": "string", "description": "newPassword of the user", "name": "newPassword", "in": "query"}], "operationId": "get__cloudapi_users_updatePassword"}}, "/cloudapi/users/getResetPasswordInformation": {"post": {"responses": {"200": {"schema": {"type": "boolean"}, "description": "result"}}, "summary": "Retrieve information about a password reset token (if still valid)\n", "description": "Retrieve information about a password reset token (if still valid)\n", "tags": ["cloudapi__users"], "parameters": [{"required": true, "type": "string", "description": " password reset token", "name": "resettoken", "in": "formData"}], "operationId": "post__cloudapi_users_getResetPasswordInformation"}, "get": {"responses": {"200": {"schema": {"type": "boolean"}, "description": "result"}}, "summary": "Retrieve information about a password reset token (if still valid)\n", "description": "Retrieve information about a password reset token (if still valid)\n", "tags": ["cloudapi__users"], "parameters": [{"required": true, "type": "string", "description": " password reset token", "name": "resettoken", "in": "query"}], "operationId": "get__cloudapi_users_getResetPasswordInformation"}}, "/cloudapi/machines/attachDisk": {"post": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Attach a disk to the machine\n", "description": "Attach a disk to the machine\n", "tags": ["cloudapi__machines"], "parameters": [{"required": true, "type": "integer", "description": " id of the machine", "name": "machineId", "in": "formData"}, {"required": true, "type": "integer", "description": "id of disk to attach", "name": "diskId", "in": "formData"}], "operationId": "post__cloudapi_machines_attachDisk"}, "get": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Attach a disk to the machine\n", "description": "Attach a disk to the machine\n", "tags": ["cloudapi__machines"], "parameters": [{"required": true, "type": "integer", "description": " id of the machine", "name": "machineId", "in": "query"}, {"required": true, "type": "integer", "description": "id of disk to attach", "name": "diskId", "in": "query"}], "operationId": "get__cloudapi_machines_attachDisk"}}, "/cloudapi/cloudspaces/update": {"post": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Update the cloudspace name and capacity parameters\n", "description": "Update the cloudspace name and capacity parameters\n", "tags": ["cloudapi__cloudspaces"], "parameters": [{"required": true, "type": "integer", "description": " id of the cloudspace", "name": "cloudspaceId", "in": "formData"}, {"required": false, "type": "string", "description": " name of the cloudspace ", "name": "name", "in": "formData"}, {"required": false, "type": "integer", "description": " max size of memory in space(in MB) ", "name": "maxMemoryCapacity", "in": "formData"}, {"required": false, "type": "integer", "description": " max size of aggregated disks(in GB) ", "name": "maxDiskCapacity", "in": "formData"}], "operationId": "post__cloudapi_cloudspaces_update"}, "get": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Update the cloudspace name and capacity parameters\n", "description": "Update the cloudspace name and capacity parameters\n", "tags": ["cloudapi__cloudspaces"], "parameters": [{"required": true, "type": "integer", "description": " id of the cloudspace", "name": "cloudspaceId", "in": "query"}, {"required": false, "type": "string", "description": " name of the cloudspace ", "name": "name", "in": "query"}, {"required": false, "type": "integer", "description": " max size of memory in space(in MB) ", "name": "maxMemoryCapacity", "in": "query"}, {"required": false, "type": "integer", "description": " max size of aggregated disks(in GB) ", "name": "maxDiskCapacity", "in": "query"}], "operationId": "get__cloudapi_cloudspaces_update"}}, "/cloudapi/machines/getHistory": {"post": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Get machine history\n", "description": "Get machine history\n", "tags": ["cloudapi__machines"], "parameters": [{"required": true, "type": "string", "description": "id of the machine", "name": "machineId", "in": "formData"}, {"required": true, "type": "integer", "description": " number of entries to return", "name": "size", "in": "formData"}], "operationId": "post__cloudapi_machines_getHistory"}, "get": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Get machine history\n", "description": "Get machine history\n", "tags": ["cloudapi__machines"], "parameters": [{"required": true, "type": "string", "description": "id of the machine", "name": "machineId", "in": "query"}, {"required": true, "type": "integer", "description": " number of entries to return", "name": "size", "in": "query"}], "operationId": "get__cloudapi_machines_getHistory"}}, "/cloudapi/machines/reset": {"post": {"responses": {"200": {"schema": {"type": "boolean"}, "description": "result"}}, "summary": "Reset the machine, force reboot\n", "description": "Reset the machine, force reboot\n", "tags": ["cloudapi__machines"], "parameters": [{"required": true, "type": "integer", "description": " id of the machine", "name": "machineId", "in": "formData"}], "operationId": "post__cloudapi_machines_reset"}, "get": {"responses": {"200": {"schema": {"type": "boolean"}, "description": "result"}}, "summary": "Reset the machine, force reboot\n", "description": "Reset the machine, force reboot\n", "tags": ["cloudapi__machines"], "parameters": [{"required": true, "type": "integer", "description": " id of the machine", "name": "machineId", "in": "query"}], "operationId": "get__cloudapi_machines_reset"}}, "/cloudapi/machines/delete": {"post": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Delete a machine\n", "description": "Delete a machine\n", "tags": ["cloudapi__machines"], "parameters": [{"required": true, "type": "integer", "description": " id of the machine", "name": "machineId", "in": "formData"}], "operationId": "post__cloudapi_machines_delete"}, "get": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Delete a machine\n", "description": "Delete a machine\n", "tags": ["cloudapi__machines"], "parameters": [{"required": true, "type": "integer", "description": " id of the machine", "name": "machineId", "in": "query"}], "operationId": "get__cloudapi_machines_delete"}}, "/cloudapi/accounts/deleteUser": {"post": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Revoke user access from the account\n", "description": "Revoke user access from the account\n", "tags": ["cloudapi__accounts"], "parameters": [{"required": true, "type": "integer", "description": " id of the account", "name": "accountId", "in": "formData"}, {"required": true, "type": "string", "description": " id or emailaddress of the user to remove", "name": "userId", "in": "formData"}, {"type": "boolean", "in": "formData", "required": false, "name": "recursivedelete", "description": " recursively revoke access rights from owned cloudspaces and vmachines ", "default": false}], "operationId": "post__cloudapi_accounts_deleteUser"}, "get": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Revoke user access from the account\n", "description": "Revoke user access from the account\n", "tags": ["cloudapi__accounts"], "parameters": [{"required": true, "type": "integer", "description": " id of the account", "name": "accountId", "in": "query"}, {"required": true, "type": "string", "description": " id or emailaddress of the user to remove", "name": "userId", "in": "query"}, {"type": "boolean", "in": "query", "required": false, "name": "recursivedelete", "description": " recursively revoke access rights from owned cloudspaces and vmachines ", "default": false}], "operationId": "get__cloudapi_accounts_deleteUser"}}, "/cloudapi/cloudspaces/addUser": {"post": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Give a registered user access rights\n", "description": "Give a registered user access rights\n", "tags": ["cloudapi__cloudspaces"], "parameters": [{"required": true, "type": "integer", "description": " id of the cloudspace", "name": "cloudspaceId", "in": "formData"}, {"required": true, "type": "string", "description": " username or emailaddress of the user to grant access", "name": "userId", "in": "formData"}, {"required": true, "type": "string", "description": " 'R' for read only access, 'RCX' for Write and 'ARCXDU' for Admin", "name": "accesstype", "in": "formData"}], "operationId": "post__cloudapi_cloudspaces_addUser"}, "get": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Give a registered user access rights\n", "description": "Give a registered user access rights\n", "tags": ["cloudapi__cloudspaces"], "parameters": [{"required": true, "type": "integer", "description": " id of the cloudspace", "name": "cloudspaceId", "in": "query"}, {"required": true, "type": "string", "description": " username or emailaddress of the user to grant access", "name": "userId", "in": "query"}, {"required": true, "type": "string", "description": " 'R' for read only access, 'RCX' for Write and 'ARCXDU' for Admin", "name": "accesstype", "in": "query"}], "operationId": "get__cloudapi_cloudspaces_addUser"}}, "/cloudapi/machines/getConsoleUrl": {"post": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Get url to connect to console\n", "description": "Get url to connect to console\n", "tags": ["cloudapi__machines"], "parameters": [{"required": true, "type": "string", "description": " id of the machine to connect to console", "name": "machineId", "in": "formData"}], "operationId": "post__cloudapi_machines_getConsoleUrl"}, "get": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Get url to connect to console\n", "description": "Get url to connect to console\n", "tags": ["cloudapi__machines"], "parameters": [{"required": true, "type": "string", "description": " id of the machine to connect to console", "name": "machineId", "in": "query"}], "operationId": "get__cloudapi_machines_getConsoleUrl"}}, "/cloudapi/accounts/addExternalUser": {"post": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Give an unregistered user access rights by sending an invite email\n", "description": "Give an unregistered user access rights by sending an invite email\n", "tags": ["cloudapi__accounts"], "parameters": [{"required": true, "type": "integer", "description": " id of the account", "name": "accountId", "in": "formData"}, {"required": true, "type": "string", "description": " emailaddress of the unregistered user that will be invited", "name": "emailaddress", "in": "formData"}, {"required": true, "type": "string", "description": " 'R' for read only access, 'RCX' for Write and 'ARCXDU' for Admin", "name": "accesstype", "in": "formData"}], "operationId": "post__cloudapi_accounts_addExternalUser"}, "get": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Give an unregistered user access rights by sending an invite email\n", "description": "Give an unregistered user access rights by sending an invite email\n", "tags": ["cloudapi__accounts"], "parameters": [{"required": true, "type": "integer", "description": " id of the account", "name": "accountId", "in": "query"}, {"required": true, "type": "string", "description": " emailaddress of the unregistered user that will be invited", "name": "emailaddress", "in": "query"}, {"required": true, "type": "string", "description": " 'R' for read only access, 'RCX' for Write and 'ARCXDU' for Admin", "name": "accesstype", "in": "query"}], "operationId": "get__cloudapi_accounts_addExternalUser"}}, "/cloudapi/portforwarding/deleteByPort": {"post": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Delete a specific port forwarding rule by public port details\n", "description": "Delete a specific port forwarding rule by public port details\n", "tags": ["cloudapi__portforwarding"], "parameters": [{"required": true, "type": "integer", "description": " id of the cloudspace", "name": "cloudspaceId", "in": "formData"}, {"required": true, "type": "string", "description": " port forwarding public ip", "name": "publicIp", "in": "formData"}, {"required": true, "type": "integer", "description": " port forwarding public port", "name": "publicPort", "in": "formData"}, {"required": true, "type": "string", "description": " port forwarding protocol", "name": "proto", "in": "formData"}], "operationId": "post__cloudapi_portforwarding_deleteByPort"}, "get": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Delete a specific port forwarding rule by public port details\n", "description": "Delete a specific port forwarding rule by public port details\n", "tags": ["cloudapi__portforwarding"], "parameters": [{"required": true, "type": "integer", "description": " id of the cloudspace", "name": "cloudspaceId", "in": "query"}, {"required": true, "type": "string", "description": " port forwarding public ip", "name": "publicIp", "in": "query"}, {"required": true, "type": "integer", "description": " port forwarding public port", "name": "publicPort", "in": "query"}, {"required": true, "type": "string", "description": " port forwarding protocol", "name": "proto", "in": "query"}], "operationId": "get__cloudapi_portforwarding_deleteByPort"}}, "/cloudapi/machines/reboot": {"post": {"responses": {"200": {"schema": {"type": "boolean"}, "description": "result"}}, "summary": "Reboot the machine\n", "description": "Reboot the machine\n", "tags": ["cloudapi__machines"], "parameters": [{"required": true, "type": "integer", "description": " id of the machine", "name": "machineId", "in": "formData"}], "operationId": "post__cloudapi_machines_reboot"}, "get": {"responses": {"200": {"schema": {"type": "boolean"}, "description": "result"}}, "summary": "Reboot the machine\n", "description": "Reboot the machine\n", "tags": ["cloudapi__machines"], "parameters": [{"required": true, "type": "integer", "description": " id of the machine", "name": "machineId", "in": "query"}], "operationId": "get__cloudapi_machines_reboot"}}, "/cloudapi/machines/attachPublicNetwork": {"post": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Attach a public network to the machine\n", "description": "Attach a public network to the machine\n", "tags": ["cloudapi__machines"], "parameters": [{"required": true, "type": "integer", "description": " id of the machine", "name": "machineId", "in": "formData"}], "operationId": "post__cloudapi_machines_attachPublicNetwork"}, "get": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Attach a public network to the machine\n", "description": "Attach a public network to the machine\n", "tags": ["cloudapi__machines"], "parameters": [{"required": true, "type": "integer", "description": " id of the machine", "name": "machineId", "in": "query"}], "operationId": "get__cloudapi_machines_attachPublicNetwork"}}, "/cloudapi/machines/rollbackSnapshot": {"post": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Rollback a snapshot of the machine\n", "description": "Rollback a snapshot of the machine\n", "tags": ["cloudapi__machines"], "parameters": [{"required": true, "type": "integer", "description": " id of the machine", "name": "machineId", "in": "formData"}, {"required": true, "type": "string", "description": " epoch time of snapshot", "name": "epoch", "in": "formData"}], "operationId": "post__cloudapi_machines_rollbackSnapshot"}, "get": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Rollback a snapshot of the machine\n", "description": "Rollback a snapshot of the machine\n", "tags": ["cloudapi__machines"], "parameters": [{"required": true, "type": "integer", "description": " id of the machine", "name": "machineId", "in": "query"}, {"required": true, "type": "string", "description": " epoch time of snapshot", "name": "epoch", "in": "query"}], "operationId": "get__cloudapi_machines_rollbackSnapshot"}}, "/cloudapi/machines/deleteUser": {"post": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Revoke user access from the vmachine\n", "description": "Revoke user access from the vmachine\n", "tags": ["cloudapi__machines"], "parameters": [{"required": true, "type": "integer", "description": " id of the machine", "name": "machineId", "in": "formData"}, {"required": true, "type": "string", "description": " id or emailaddress of the user to remove", "name": "userId", "in": "formData"}], "operationId": "post__cloudapi_machines_deleteUser"}, "get": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Revoke user access from the vmachine\n", "description": "Revoke user access from the vmachine\n", "tags": ["cloudapi__machines"], "parameters": [{"required": true, "type": "integer", "description": " id of the machine", "name": "machineId", "in": "query"}, {"required": true, "type": "string", "description": " id or emailaddress of the user to remove", "name": "userId", "in": "query"}], "operationId": "get__cloudapi_machines_deleteUser"}}, "/cloudapi/machines/start": {"post": {"responses": {"200": {"schema": {"type": "boolean"}, "description": "result"}}, "summary": "Start the machine\n", "description": "Start the machine\n", "tags": ["cloudapi__machines"], "parameters": [{"required": true, "type": "integer", "description": " id of the machine", "name": "machineId", "in": "formData"}], "operationId": "post__cloudapi_machines_start"}, "get": {"responses": {"200": {"schema": {"type": "boolean"}, "description": "result"}}, "summary": "Start the machine\n", "description": "Start the machine\n", "tags": ["cloudapi__machines"], "parameters": [{"required": true, "type": "integer", "description": " id of the machine", "name": "machineId", "in": "query"}], "operationId": "get__cloudapi_machines_start"}}, "/cloudapi/machines/listSnapshots": {"post": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "List the snapshots of the machine\n", "description": "List the snapshots of the machine\n", "tags": ["cloudapi__machines"], "parameters": [{"required": true, "type": "integer", "description": " id of the machine", "name": "machineId", "in": "formData"}], "operationId": "post__cloudapi_machines_listSnapshots"}, "get": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "List the snapshots of the machine\n", "description": "List the snapshots of the machine\n", "tags": ["cloudapi__machines"], "parameters": [{"required": true, "type": "integer", "description": " id of the machine", "name": "machineId", "in": "query"}], "operationId": "get__cloudapi_machines_listSnapshots"}}, "/cloudapi/portforwarding/list": {"post": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "List all port forwarding rules in a cloudspace or machine\n", "description": "List all port forwarding rules in a cloudspace or machine\n", "tags": ["cloudapi__portforwarding"], "parameters": [{"required": true, "type": "integer", "description": "id of the cloudspace", "name": "cloudspaceId", "in": "formData"}, {"required": false, "type": "integer", "description": "id of the machine, all rules of cloudspace will be listed if set to None ", "name": "machineId", "in": "formData"}], "operationId": "post__cloudapi_portforwarding_list"}, "get": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "List all port forwarding rules in a cloudspace or machine\n", "description": "List all port forwarding rules in a cloudspace or machine\n", "tags": ["cloudapi__portforwarding"], "parameters": [{"required": true, "type": "integer", "description": "id of the cloudspace", "name": "cloudspaceId", "in": "query"}, {"required": false, "type": "integer", "description": "id of the machine, all rules of cloudspace will be listed if set to None ", "name": "machineId", "in": "query"}], "operationId": "get__cloudapi_portforwarding_list"}}, "/cloudapi/users/getMatchingUsernames": {"post": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Get a list of the matching usernames for a given string\n", "description": "Get a list of the matching usernames for a given string\n", "tags": ["cloudapi__users"], "parameters": [{"required": true, "type": "string", "description": "regex of the usernames to searched for", "name": "usernameregex", "in": "formData"}, {"type": "integer", "in": "formData", "required": true, "name": "limit", "description": "the number of usernames to return", "default": 5}], "operationId": "post__cloudapi_users_getMatchingUsernames"}, "get": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Get a list of the matching usernames for a given string\n", "description": "Get a list of the matching usernames for a given string\n", "tags": ["cloudapi__users"], "parameters": [{"required": true, "type": "string", "description": "regex of the usernames to searched for", "name": "usernameregex", "in": "query"}, {"type": "integer", "in": "query", "required": true, "name": "limit", "description": "the number of usernames to return", "default": 5}], "operationId": "get__cloudapi_users_getMatchingUsernames"}}, "/cloudapi/machines/deleteSnapshot": {"post": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Delete a snapshot of the machine\n", "description": "Delete a snapshot of the machine\n", "tags": ["cloudapi__machines"], "parameters": [{"required": true, "type": "integer", "description": " id of the machine", "name": "machineId", "in": "formData"}, {"required": true, "type": "string", "description": " epoch time of snapshot", "name": "epoch", "in": "formData"}], "operationId": "post__cloudapi_machines_deleteSnapshot"}, "get": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Delete a snapshot of the machine\n", "description": "Delete a snapshot of the machine\n", "tags": ["cloudapi__machines"], "parameters": [{"required": true, "type": "integer", "description": " id of the machine", "name": "machineId", "in": "query"}, {"required": true, "type": "string", "description": " epoch time of snapshot", "name": "epoch", "in": "query"}], "operationId": "get__cloudapi_machines_deleteSnapshot"}}, "/cloudapi/machines/resize": {"post": {"responses": {"200": {"schema": {"type": "boolean"}, "description": "result"}}, "summary": "Change the size of a machine\n", "description": "Change the size of a machine\n", "tags": ["cloudapi__machines"], "parameters": [{"required": true, "type": "integer", "description": " id of machine to resize", "name": "machineId", "in": "formData"}, {"required": true, "type": "integer", "description": "new sizeId", "name": "sizeId", "in": "formData"}], "operationId": "post__cloudapi_machines_resize"}, "get": {"responses": {"200": {"schema": {"type": "boolean"}, "description": "result"}}, "summary": "Change the size of a machine\n", "description": "Change the size of a machine\n", "tags": ["cloudapi__machines"], "parameters": [{"required": true, "type": "integer", "description": " id of machine to resize", "name": "machineId", "in": "query"}, {"required": true, "type": "integer", "description": "new sizeId", "name": "sizeId", "in": "query"}], "operationId": "get__cloudapi_machines_resize"}}, "/cloudapi/locations/getUrl": {"post": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Get the portal url\n", "description": "Get the portal url\n", "operationId": "post__cloudapi_locations_getUrl", "tags": ["cloudapi__locations"]}, "get": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Get the portal url\n", "description": "Get the portal url\n", "operationId": "get__cloudapi_locations_getUrl", "tags": ["cloudapi__locations"]}}, "/cloudapi/cloudspaces/addExternalUser": {"post": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Give an unregistered user access rights by sending an invite email\n", "description": "Give an unregistered user access rights by sending an invite email\n", "tags": ["cloudapi__cloudspaces"], "parameters": [{"required": true, "type": "integer", "description": " id of the cloudspace", "name": "cloudspaceId", "in": "formData"}, {"required": true, "type": "string", "description": " emailaddress of the unregistered user that will be invited", "name": "emailaddress", "in": "formData"}, {"required": true, "type": "string", "description": " 'R' for read only access, 'RCX' for Write and 'ARCXDU' for Admin", "name": "accesstype", "in": "formData"}], "operationId": "post__cloudapi_cloudspaces_addExternalUser"}, "get": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Give an unregistered user access rights by sending an invite email\n", "description": "Give an unregistered user access rights by sending an invite email\n", "tags": ["cloudapi__cloudspaces"], "parameters": [{"required": true, "type": "integer", "description": " id of the cloudspace", "name": "cloudspaceId", "in": "query"}, {"required": true, "type": "string", "description": " emailaddress of the unregistered user that will be invited", "name": "emailaddress", "in": "query"}, {"required": true, "type": "string", "description": " 'R' for read only access, 'RCX' for Write and 'ARCXDU' for Admin", "name": "accesstype", "in": "query"}], "operationId": "get__cloudapi_cloudspaces_addExternalUser"}}, "/cloudapi/accounts/get": {"post": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Get account details\n", "description": "Get account details\n", "tags": ["cloudapi__accounts"], "parameters": [{"required": true, "type": "integer", "description": " id of the account", "name": "accountId", "in": "formData"}], "operationId": "post__cloudapi_accounts_get"}, "get": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Get account details\n", "description": "Get account details\n", "tags": ["cloudapi__accounts"], "parameters": [{"required": true, "type": "integer", "description": " id of the account", "name": "accountId", "in": "query"}], "operationId": "get__cloudapi_accounts_get"}}, "/cloudapi/users/authenticate": {"post": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "The function evaluates the provided username and password and returns a session key.\nThe session key can be used for doing api requests. E.g this is the authkey parameter in every actor request.\nA session key is only vallid for a limited time.\n", "description": "The function evaluates the provided username and password and returns a session key.\nThe session key can be used for doing api requests. E.g this is the authkey parameter in every actor request.\nA session key is only vallid for a limited time.\n", "tags": ["cloudapi__users"], "parameters": [{"required": true, "type": "string", "description": "username to validate", "name": "username", "in": "formData"}, {"required": true, "type": "string", "description": "password to validate", "name": "password", "in": "formData"}], "operationId": "post__cloudapi_users_authenticate"}, "get": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "The function evaluates the provided username and password and returns a session key.\nThe session key can be used for doing api requests. E.g this is the authkey parameter in every actor request.\nA session key is only vallid for a limited time.\n", "description": "The function evaluates the provided username and password and returns a session key.\nThe session key can be used for doing api requests. E.g this is the authkey parameter in every actor request.\nA session key is only vallid for a limited time.\n", "tags": ["cloudapi__users"], "parameters": [{"required": true, "type": "string", "description": "username to validate", "name": "username", "in": "query"}, {"required": true, "type": "string", "description": "password to validate", "name": "password", "in": "query"}], "operationId": "get__cloudapi_users_authenticate"}}, "/cloudapi/locations/list": {"post": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "List all locations\n", "description": "List all locations\n", "operationId": "post__cloudapi_locations_list", "tags": ["cloudapi__locations"]}, "get": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "List all locations\n", "description": "List all locations\n", "operationId": "get__cloudapi_locations_list", "tags": ["cloudapi__locations"]}}, "/cloudapi/cloudspaces/delete": {"post": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Delete the cloudspace\n", "description": "Delete the cloudspace\n", "tags": ["cloudapi__cloudspaces"], "parameters": [{"required": true, "type": "integer", "description": " id of the cloudspace", "name": "cloudspaceId", "in": "formData"}], "operationId": "post__cloudapi_cloudspaces_delete"}, "get": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Delete the cloudspace\n", "description": "Delete the cloudspace\n", "tags": ["cloudapi__cloudspaces"], "parameters": [{"required": true, "type": "integer", "description": " id of the cloudspace", "name": "cloudspaceId", "in": "query"}], "operationId": "get__cloudapi_cloudspaces_delete"}}, "/cloudapi/users/setData": {"post": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Set extra user information\n", "description": "Set extra user information\n", "tags": ["cloudapi__users"], "parameters": [{"required": true, "type": "string", "description": "data to set on user", "name": "data", "in": "formData"}], "operationId": "post__cloudapi_users_setData"}, "get": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Set extra user information\n", "description": "Set extra user information\n", "tags": ["cloudapi__users"], "parameters": [{"required": true, "type": "string", "description": "data to set on user", "name": "data", "in": "query"}], "operationId": "get__cloudapi_users_setData"}}, "/cloudapi/accounts/updateUser": {"post": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Update user access rights\n", "description": "Update user access rights\n", "tags": ["cloudapi__accounts"], "parameters": [{"required": true, "type": "integer", "description": " id of the account", "name": "accountId", "in": "formData"}, {"required": true, "type": "string", "description": " userid/email for registered users or emailaddress for unregistered users", "name": "userId", "in": "formData"}, {"required": true, "type": "string", "description": " 'R' for read only access, 'RCX' for Write and 'ARCXDU' for Admin", "name": "accesstype", "in": "formData"}], "operationId": "post__cloudapi_accounts_updateUser"}, "get": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Update user access rights\n", "description": "Update user access rights\n", "tags": ["cloudapi__accounts"], "parameters": [{"required": true, "type": "integer", "description": " id of the account", "name": "accountId", "in": "query"}, {"required": true, "type": "string", "description": " userid/email for registered users or emailaddress for unregistered users", "name": "userId", "in": "query"}, {"required": true, "type": "string", "description": " 'R' for read only access, 'RCX' for Write and 'ARCXDU' for Admin", "name": "accesstype", "in": "query"}], "operationId": "get__cloudapi_accounts_updateUser"}}, "/cloudapi/paypal/initiatepayment": {"post": {"responses": {"200": {"schema": {"$ref": "#/definitions/object"}, "description": "result"}}, "summary": "Starts a paypal payment flow.\n", "description": "Starts a paypal payment flow.\n", "tags": ["cloudapi__paypal"], "parameters": [{"required": true, "type": "integer", "description": "id of the account", "name": "accountId", "in": "formData"}, {"required": true, "type": "integer", "description": "amount of credit to add", "name": "amount", "in": "formData"}, {"required": true, "type": "string", "description": "currency the code of the currency you want to make a payment with (USD currently supported)", "name": "currency", "in": "formData"}], "operationId": "post__cloudapi_paypal_initiatepayment"}, "get": {"responses": {"200": {"schema": {"$ref": "#/definitions/object"}, "description": "result"}}, "summary": "Starts a paypal payment flow.\n", "description": "Starts a paypal payment flow.\n", "tags": ["cloudapi__paypal"], "parameters": [{"required": true, "type": "integer", "description": "id of the account", "name": "accountId", "in": "query"}, {"required": true, "type": "integer", "description": "amount of credit to add", "name": "amount", "in": "query"}, {"required": true, "type": "string", "description": "currency the code of the currency you want to make a payment with (USD currently supported)", "name": "currency", "in": "query"}], "operationId": "get__cloudapi_paypal_initiatepayment"}}, "/cloudapi/machines/addDisk": {"post": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Create and attach a disk to the machine\n", "description": "Create and attach a disk to the machine\n", "tags": ["cloudapi__machines"], "parameters": [{"required": true, "type": "integer", "description": "id of the machine", "name": "machineId", "in": "formData"}, {"required": true, "type": "string", "description": "name of disk", "name": "diskName", "in": "formData"}, {"required": true, "type": "string", "description": "optional description", "name": "description", "in": "formData"}, {"type": "integer", "in": "formData", "required": true, "name": "size", "description": "size in GByte", "default": 10}, {"type": "string", "in": "formData", "required": true, "name": "type", "description": " (B;D;T) B=Boot;D=Data;T=Temp", "default": "B"}], "operationId": "post__cloudapi_machines_addDisk"}, "get": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Create and attach a disk to the machine\n", "description": "Create and attach a disk to the machine\n", "tags": ["cloudapi__machines"], "parameters": [{"required": true, "type": "integer", "description": "id of the machine", "name": "machineId", "in": "query"}, {"required": true, "type": "string", "description": "name of disk", "name": "diskName", "in": "query"}, {"required": true, "type": "string", "description": "optional description", "name": "description", "in": "query"}, {"type": "integer", "in": "query", "required": true, "name": "size", "description": "size in GByte", "default": 10}, {"type": "string", "in": "query", "required": true, "name": "type", "description": " (B;D;T) B=Boot;D=Data;T=Temp", "default": "B"}], "operationId": "get__cloudapi_machines_addDisk"}}, "/cloudapi/images/list": {"post": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "List the availabe images, filtering can be based on the user which is doing the request\n", "description": "List the availabe images, filtering can be based on the user which is doing the request\n", "tags": ["cloudapi__images"], "parameters": [{"required": false, "type": "integer", "description": " optional account id to filer ", "name": "accountId", "in": "formData"}, {"required": false, "type": "integer", "description": " optional cloudpsace id to filer ", "name": "cloudspaceId", "in": "formData"}], "operationId": "post__cloudapi_images_list"}, "get": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "List the availabe images, filtering can be based on the user which is doing the request\n", "description": "List the availabe images, filtering can be based on the user which is doing the request\n", "tags": ["cloudapi__images"], "parameters": [{"required": false, "type": "integer", "description": " optional account id to filer ", "name": "accountId", "in": "query"}, {"required": false, "type": "integer", "description": " optional cloudpsace id to filer ", "name": "cloudspaceId", "in": "query"}], "operationId": "get__cloudapi_images_list"}}, "/cloudapi/users/validate": {"post": {"responses": {"200": {"schema": {"type": "boolean"}, "description": "result"}}, "summary": "Validates user email and sets his password\n", "description": "Validates user email and sets his password\n", "tags": ["cloudapi__users"], "parameters": [{"required": true, "type": "string", "description": " Validation token", "name": "validationtoken", "in": "formData"}, {"required": true, "type": "string", "description": " User password", "name": "password", "in": "formData"}], "operationId": "post__cloudapi_users_validate"}, "get": {"responses": {"200": {"schema": {"type": "boolean"}, "description": "result"}}, "summary": "Validates user email and sets his password\n", "description": "Validates user email and sets his password\n", "tags": ["cloudapi__users"], "parameters": [{"required": true, "type": "string", "description": " Validation token", "name": "validationtoken", "in": "query"}, {"required": true, "type": "string", "description": " User password", "name": "password", "in": "query"}], "operationId": "get__cloudapi_users_validate"}}, "/cloudapi/machines/detachPublicNetwork": {"post": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Detach the public network from the machine\n", "description": "Detach the public network from the machine\n", "tags": ["cloudapi__machines"], "parameters": [{"required": true, "type": "integer", "description": " id of the machine", "name": "machineId", "in": "formData"}], "operationId": "post__cloudapi_machines_detachPublicNetwork"}, "get": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Detach the public network from the machine\n", "description": "Detach the public network from the machine\n", "tags": ["cloudapi__machines"], "parameters": [{"required": true, "type": "integer", "description": " id of the machine", "name": "machineId", "in": "query"}], "operationId": "get__cloudapi_machines_detachPublicNetwork"}}, "/cloudapi/machines/stop": {"post": {"responses": {"200": {"schema": {"type": "boolean"}, "description": "result"}}, "summary": "Stop the machine\n", "description": "Stop the machine\n", "tags": ["cloudapi__machines"], "parameters": [{"required": true, "type": "integer", "description": " id of the machine", "name": "machineId", "in": "formData"}], "operationId": "post__cloudapi_machines_stop"}, "get": {"responses": {"200": {"schema": {"type": "boolean"}, "description": "result"}}, "summary": "Stop the machine\n", "description": "Stop the machine\n", "tags": ["cloudapi__machines"], "parameters": [{"required": true, "type": "integer", "description": " id of the machine", "name": "machineId", "in": "query"}], "operationId": "get__cloudapi_machines_stop"}}, "/cloudapi/machines/addExternalUser": {"post": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Give an unregistered user access rights by sending an invite email\n", "description": "Give an unregistered user access rights by sending an invite email\n", "tags": ["cloudapi__machines"], "parameters": [{"required": true, "type": "integer", "description": " id of the machine", "name": "machineId", "in": "formData"}, {"required": true, "type": "string", "description": " emailaddress of the unregistered user that will be invited", "name": "emailaddress", "in": "formData"}, {"required": true, "type": "string", "description": " 'R' for read only access, 'RCX' for Write and 'ARCXDU' for Admin", "name": "accesstype", "in": "formData"}], "operationId": "post__cloudapi_machines_addExternalUser"}, "get": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Give an unregistered user access rights by sending an invite email\n", "description": "Give an unregistered user access rights by sending an invite email\n", "tags": ["cloudapi__machines"], "parameters": [{"required": true, "type": "integer", "description": " id of the machine", "name": "machineId", "in": "query"}, {"required": true, "type": "string", "description": " emailaddress of the unregistered user that will be invited", "name": "emailaddress", "in": "query"}, {"required": true, "type": "string", "description": " 'R' for read only access, 'RCX' for Write and 'ARCXDU' for Admin", "name": "accesstype", "in": "query"}], "operationId": "get__cloudapi_machines_addExternalUser"}}, "/cloudapi/users/sendResetPasswordLink": {"post": {"responses": {"200": {"schema": {"type": "boolean"}, "description": "result"}}, "summary": "Sends a reset password link to the supplied email address\n", "description": "Sends a reset password link to the supplied email address\n", "tags": ["cloudapi__users"], "parameters": [{"required": true, "type": "string", "description": "unique emailaddress for the account", "name": "emailaddress", "in": "formData"}], "operationId": "post__cloudapi_users_sendResetPasswordLink"}, "get": {"responses": {"200": {"schema": {"type": "boolean"}, "description": "result"}}, "summary": "Sends a reset password link to the supplied email address\n", "description": "Sends a reset password link to the supplied email address\n", "tags": ["cloudapi__users"], "parameters": [{"required": true, "type": "string", "description": "unique emailaddress for the account", "name": "emailaddress", "in": "query"}], "operationId": "get__cloudapi_users_sendResetPasswordLink"}}, "/cloudapi/machines/list": {"post": {"responses": {"200": {"schema": {"$ref": "#/definitions/strarray"}, "description": "result"}}, "summary": "List the deployed machines in a space. Filtering based on status is possible\n", "description": "List the deployed machines in a space. Filtering based on status is possible\n", "tags": ["cloudapi__machines"], "parameters": [{"required": false, "type": "integer", "description": "id of cloud space in which machine exists ", "name": "cloudspaceId", "in": "formData"}, {"required": false, "type": "string", "description": "when not empty will filter on type (types are ACTIVE,HALTED,BACKUP,EXPORT,SNAPSHOT) ", "name": "type", "in": "formData"}], "operationId": "post__cloudapi_machines_list"}, "get": {"responses": {"200": {"schema": {"$ref": "#/definitions/strarray"}, "description": "result"}}, "summary": "List the deployed machines in a space. Filtering based on status is possible\n", "description": "List the deployed machines in a space. Filtering based on status is possible\n", "tags": ["cloudapi__machines"], "parameters": [{"required": false, "type": "integer", "description": "id of cloud space in which machine exists ", "name": "cloudspaceId", "in": "query"}, {"required": false, "type": "string", "description": "when not empty will filter on type (types are ACTIVE,HALTED,BACKUP,EXPORT,SNAPSHOT) ", "name": "type", "in": "query"}], "operationId": "get__cloudapi_machines_list"}}, "/cloudapi/disks/get": {"post": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Get disk details\n", "description": "Get disk details\n", "tags": ["cloudapi__disks"], "parameters": [{"required": true, "type": "integer", "description": " id of the disk", "name": "diskId", "in": "formData"}], "operationId": "post__cloudapi_disks_get"}, "get": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Get disk details\n", "description": "Get disk details\n", "tags": ["cloudapi__disks"], "parameters": [{"required": true, "type": "integer", "description": " id of the disk", "name": "diskId", "in": "query"}], "operationId": "get__cloudapi_disks_get"}}, "/cloudapi/cloudspaces/updateUser": {"post": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Update user access rights. Returns True only if an actual update has happened.\n", "description": "Update user access rights. Returns True only if an actual update has happened.\n", "tags": ["cloudapi__cloudspaces"], "parameters": [{"required": true, "type": "integer", "description": " id of the cloudspace", "name": "cloudspaceId", "in": "formData"}, {"required": true, "type": "string", "description": " userid/email for registered users or emailaddress for unregistered users", "name": "userId", "in": "formData"}, {"required": true, "type": "string", "description": " 'R' for read only access, 'RCX' for Write and 'ARCXDU' for Admin", "name": "accesstype", "in": "formData"}], "operationId": "post__cloudapi_cloudspaces_updateUser"}, "get": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Update user access rights. Returns True only if an actual update has happened.\n", "description": "Update user access rights. Returns True only if an actual update has happened.\n", "tags": ["cloudapi__cloudspaces"], "parameters": [{"required": true, "type": "integer", "description": " id of the cloudspace", "name": "cloudspaceId", "in": "query"}, {"required": true, "type": "string", "description": " userid/email for registered users or emailaddress for unregistered users", "name": "userId", "in": "query"}, {"required": true, "type": "string", "description": " 'R' for read only access, 'RCX' for Write and 'ARCXDU' for Admin", "name": "accesstype", "in": "query"}], "operationId": "get__cloudapi_cloudspaces_updateUser"}}, "/cloudapi/cloudspaces/deleteUser": {"post": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Revoke user access from the cloudspace\n", "description": "Revoke user access from the cloudspace\n", "tags": ["cloudapi__cloudspaces"], "parameters": [{"required": true, "type": "integer", "description": " id of the cloudspace", "name": "cloudspaceId", "in": "formData"}, {"required": true, "type": "string", "description": " id or emailaddress of the user to remove", "name": "userId", "in": "formData"}, {"type": "boolean", "in": "formData", "required": false, "name": "recursivedelete", "description": " recursively revoke access rights from related vmachines ", "default": false}], "operationId": "post__cloudapi_cloudspaces_deleteUser"}, "get": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Revoke user access from the cloudspace\n", "description": "Revoke user access from the cloudspace\n", "tags": ["cloudapi__cloudspaces"], "parameters": [{"required": true, "type": "integer", "description": " id of the cloudspace", "name": "cloudspaceId", "in": "query"}, {"required": true, "type": "string", "description": " id or emailaddress of the user to remove", "name": "userId", "in": "query"}, {"type": "boolean", "in": "query", "required": false, "name": "recursivedelete", "description": " recursively revoke access rights from related vmachines ", "default": false}], "operationId": "get__cloudapi_cloudspaces_deleteUser"}}, "/cloudapi/machines/snapshot": {"post": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Take a snapshot of the machine\n", "description": "Take a snapshot of the machine\n", "tags": ["cloudapi__machines"], "parameters": [{"required": true, "type": "integer", "description": "id of machine to snapshot", "name": "machineId", "in": "formData"}, {"required": true, "type": "string", "description": " name to give snapshot", "name": "name", "in": "formData"}], "operationId": "post__cloudapi_machines_snapshot"}, "get": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Take a snapshot of the machine\n", "description": "Take a snapshot of the machine\n", "tags": ["cloudapi__machines"], "parameters": [{"required": true, "type": "integer", "description": "id of machine to snapshot", "name": "machineId", "in": "query"}, {"required": true, "type": "string", "description": " name to give snapshot", "name": "name", "in": "query"}], "operationId": "get__cloudapi_machines_snapshot"}}, "/cloudapi/disks/create": {"post": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Create a disk\n", "description": "Create a disk\n", "tags": ["cloudapi__disks"], "parameters": [{"required": true, "type": "integer", "description": "id of the account", "name": "accountId", "in": "formData"}, {"required": true, "type": "integer", "description": "id of the grid", "name": "gid", "in": "formData"}, {"required": true, "type": "string", "description": "name of disk", "name": "name", "in": "formData"}, {"required": true, "type": "string", "description": "optional description of disk", "name": "description", "in": "formData"}, {"type": "integer", "in": "formData", "required": true, "name": "size", "description": "size in GBytes, default is 0", "default": 10}, {"type": "string", "in": "formData", "required": true, "name": "type", "description": " (B;D;T)  B=Boot;D=Data;T=Temp", "default": "B"}], "operationId": "post__cloudapi_disks_create"}, "get": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Create a disk\n", "description": "Create a disk\n", "tags": ["cloudapi__disks"], "parameters": [{"required": true, "type": "integer", "description": "id of the account", "name": "accountId", "in": "query"}, {"required": true, "type": "integer", "description": "id of the grid", "name": "gid", "in": "query"}, {"required": true, "type": "string", "description": "name of disk", "name": "name", "in": "query"}, {"required": true, "type": "string", "description": "optional description of disk", "name": "description", "in": "query"}, {"type": "integer", "in": "query", "required": true, "name": "size", "description": "size in GBytes, default is 0", "default": 10}, {"type": "string", "in": "query", "required": true, "name": "type", "description": " (B;D;T)  B=Boot;D=Data;T=Temp", "default": "B"}], "operationId": "get__cloudapi_disks_create"}}, "/cloudapi/users/get": {"post": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Get information of a existing username based on username id\n", "description": "Get information of a existing username based on username id\n", "tags": ["cloudapi__users"], "parameters": [{"required": true, "type": "string", "description": "username of the user", "name": "username", "in": "formData"}], "operationId": "post__cloudapi_users_get"}, "get": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Get information of a existing username based on username id\n", "description": "Get information of a existing username based on username id\n", "tags": ["cloudapi__users"], "parameters": [{"required": true, "type": "string", "description": "username of the user", "name": "username", "in": "query"}], "operationId": "get__cloudapi_users_get"}}, "/cloudapi/cloudspaces/deploy": {"post": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Create VFW for cloudspace\n", "description": "Create VFW for cloudspace\n", "tags": ["cloudapi__cloudspaces"], "parameters": [{"required": true, "type": "integer", "description": " id of the cloudspace", "name": "cloudspaceId", "in": "formData"}], "operationId": "post__cloudapi_cloudspaces_deploy"}, "get": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Create VFW for cloudspace\n", "description": "Create VFW for cloudspace\n", "tags": ["cloudapi__cloudspaces"], "parameters": [{"required": true, "type": "integer", "description": " id of the cloudspace", "name": "cloudspaceId", "in": "query"}], "operationId": "get__cloudapi_cloudspaces_deploy"}}, "/cloudapi/cloudspaces/getDefenseShield": {"post": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Get information about the defense shield\n", "description": "Get information about the defense shield\n", "tags": ["cloudapi__cloudspaces"], "parameters": [{"required": true, "type": "integer", "description": " id of the cloudspace", "name": "cloudspaceId", "in": "formData"}], "operationId": "post__cloudapi_cloudspaces_getDefenseShield"}, "get": {"responses": {"200": {"schema": {"type": "string"}, "description": "result"}}, "summary": "Get information about the defense shield\n", "description": "Get information about the defense shield\n", "tags": ["cloudapi__cloudspaces"], "parameters": [{"required": true, "type": "integer", "description": " id of the cloudspace", "name": "cloudspaceId", "in": "query"}], "operationId": "get__cloudapi_cloudspaces_getDefenseShield"}}}, "basePath": "/restmachine/", "tags": [{"description": "API actor api for managing account\n", "name": "cloudapi__accounts"}, {"description": "API actor api for managing cloudspaces, this actor is the final api a enduser uses to manage cloudspaces\n", "name": "cloudapi__cloudspaces"}, {"description": "API consumption actor, this actor is the final api a enduser uses to get consumption details\n", "name": "cloudapi__consumption"}, {"description": "API actor api, this actor is the final api a enduser uses to manage his resources\n", "name": "cloudapi__disks"}, {"description": "Lists all the images. A image is a template which can be used to deploy machines.\n", "name": "cloudapi__images"}, {"description": "API actor api for managing locations\n", "name": "cloudapi__locations"}, {"description": "API actor api, this actor is the final api a enduser uses to manage his resources\n", "name": "cloudapi__machines"}, {"description": "API actor api, this actor is the final api a enduser uses to manage his resources\n", "name": "cloudapi__machines"}, {"description": "API consumption actor, this actor is the final api an enduser uses to pay with paypal\n", "name": "cloudapi__paypal"}, {"description": "Portforwarding api\nuses actor /opt/code/jumpscale/unstable__jumpscale_grid/apps/vfw/actor/jumpscale__netmgr/\n", "name": "cloudapi__portforwarding"}, {"description": "API actor api, this actor is the final api a enduser uses to manage S3 storage\n", "name": "cloudapi__s3storage"}, {"description": "Lists all the configured flavors available.\nA flavor is a combination of amount of compute capacity(CU) and disk capacity(GB).\n", "name": "cloudapi__sizes"}, {"description": "User management\n", "name": "cloudapi__users"}], "swagger": "2.0"}